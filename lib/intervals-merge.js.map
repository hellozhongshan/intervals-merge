{"version":3,"file":"intervals-merge.js","sources":["../src/index.js","../src/utils.js","../src/intervals-merge.js"],"sourcesContent":["import { merge } from './intervals-merge'\r\nimport { parseInterval } from './utils'\r\n\r\n// let development = '{{DEVELOPMENT}}' === 'development'\r\nexport default {\r\n    version: '{{VERSION}}',\r\n    parseInterval,\r\n    merge\r\n    // merge: (intervals = []) => merge(intervals.map(interval => parseInterval(interval)))\r\n}","/**\r\n * 解析区间，如左开右闭区间 (0, 1] -> { min: 0, max: 1, leftOperator: '(', rightOperator: ']' }\r\n * @param {*} interval 区间\r\n */\r\nexport const parseInterval = interval => {\r\n  const intervalTemp = String(interval).slice(1, -1).replace(/∞/g, 'Infinity')\r\n  const inputRegexp = /(?:,|，)/g\r\n  const text = intervalTemp.split(inputRegexp)\r\n  const min = Number(text[0])\r\n  const max = Number(text[1])\r\n  const leftOperator = interval.substring(0, 1)\r\n  const rightOperator = interval.charAt(interval.length - 1)\r\n  return {\r\n    min,\r\n    max,\r\n    leftOperator,\r\n    rightOperator\r\n  }\r\n}\r\n","export const merge = intervals => {\r\n  intervals.sort((a, b) => {\r\n    if (a.min !== b.min) {\r\n        return a.min - b.min;\r\n    }\r\n    if (a.max === b.max) {\r\n      if (a.rightOperator === ']' && b.rightOperator === ')') {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    } else {\r\n      return a.max - b.max\r\n    }\r\n  })\r\n  const len = intervals.length\r\n  let ans = []\r\n  let leftOperator\r\n  let rightOperator\r\n  let start\r\n  let end\r\n\r\n  for (let i = 0; i < len; i++) {\r\n    let interval = intervals[i]\r\n    let s = interval.min\r\n    let  e = interval.max\r\n    if (start === undefined) {\r\n      start = s\r\n      end = e\r\n      leftOperator = interval.leftOperator\r\n      rightOperator = interval.rightOperator\r\n    } else if ((s === end && !(rightOperator === ')' && interval.leftOperator === '(')) || s < end) {\r\n      if (e === end) {\r\n        if (interval.rightOperator === ']' && rightOperator === ')') {\r\n          rightOperator = ']'\r\n        } else if (interval.rightOperator === ')' && rightOperator === ']') {\r\n          rightOperator = ']'\r\n        } else {\r\n          // TODO:\r\n          rightOperator = rightOperator\r\n        }\r\n        // TODO:\r\n        end = end\r\n      } else if (e > end) {\r\n        end = e\r\n        rightOperator = interval.rightOperator\r\n      } else {\r\n        // TODO:\r\n        end = end\r\n      }\r\n    } else {\r\n      let part = {\r\n        min: start,\r\n        max: end,\r\n        leftOperator,\r\n        rightOperator\r\n      }\r\n      ans.push(part)\r\n      start = s\r\n      end = e\r\n      leftOperator = interval.leftOperator\r\n      rightOperator = interval.rightOperator\r\n    }\r\n  }\r\n\r\n  if (start !== undefined) {\r\n    let part = {\r\n      min: start,\r\n      max: end,\r\n      leftOperator,\r\n      rightOperator\r\n    }\r\n    ans.push(part)\r\n  }\r\n\r\n  return ans\r\n}\r\n"],"names":["text","String","interval","slice","replace","split","Number","substring","charAt","length","sort","a","b","min","max","rightOperator","len","intervals","ans","leftOperator","start","end","i","s","e","undefined","part","push"],"mappings":"gMAIe,SACF,sBCDgB,gBAGrBA,EAFeC,OAAOC,GAAUC,MAAM,GAAI,GAAGC,QAAQ,KAAM,YAEvCC,MADN,kBAMb,KAJKC,OAAON,EAAK,QACZM,OAAON,EAAK,iBACHE,EAASK,UAAU,EAAG,iBACrBL,EAASM,OAAON,EAASO,OAAS,WCXrC,cACTC,KAAK,SAACC,EAAGC,UACbD,EAAEE,MAAQD,EAAEC,IACLF,EAAEE,IAAMD,EAAEC,IAEjBF,EAAEG,MAAQF,EAAEE,IACU,MAApBH,EAAEI,eAA6C,MAApBH,EAAEG,cAM1BJ,EAAEG,IAAMF,EAAEE,cAGfE,EAAMC,EAAUR,OAClBS,EAAM,GACNC,SACAJ,SACAK,SACAC,SAEKC,EAAI,EAAGA,EAAIN,EAAKM,IAAK,KACxBpB,EAAWe,EAAUK,GACrBC,EAAIrB,EAASW,IACZW,EAAItB,EAASY,YACJW,IAAVL,IACMG,IACFC,IACStB,EAASiB,eACRjB,EAASa,mBACpB,GAAKQ,IAAMF,IAA2B,MAAlBN,GAAmD,MAA1Bb,EAASiB,eAA0BI,EAAIF,EACrFG,IAAMH,KACuB,MAA3BnB,EAASa,eAA2C,MAAlBA,EACpB,IACoB,MAA3Bb,EAASa,eAA2C,MAAlBA,EAC3B,IAGAA,IAGZM,GACOA,EAAJG,KACHA,IACUtB,EAASa,iBAGnBM,MAEH,KACDK,EAAO,KACJN,MACAC,oCAIHM,KAAKD,KACDH,IACFC,IACStB,EAASiB,eACRjB,EAASa,uBAIfU,IAAVL,EAAqB,KACnBM,EAAO,KACJN,MACAC,oCAIHM,KAAKD,UAGJR"}